defaults: &defaults
  docker:
    - image: circleci/android:api-28-alpha
  working_directory: ~/code
  environment:
    JVM_OPTS: -Xmx3200m
    TERM: dumb

version: 2
jobs:

  build:
    <<: *defaults
    steps:
    - checkout

    - restore_cache:
        key: jars-{{ checksum "build.gradle" }}-{{ checksum "demo/build.gradle" }}
    - run:
        name: Download Dependencies
        command: ./gradlew androidDependencies
    - save_cache:
        paths:
        - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "demo/build.gradle" }}-{{ checksum  "library/build.gradle" }}

    - run:
        name: Assemble PLUGIN and publish to local
        command: ./gradlew :inappdevtools-plugin:publishToMavenLocal
    - run:
        name: Assemble NOOP
        command: ./gradlew :noop:assembleDebug
    - run:
        name: Assemble COMPAT Support
        command: ./gradlew :compat:assembleSupportDebug
    - run:
        name: Assemble LIBRARY Support
        command: ./gradlew :library:assembleSupportDebug
    - run:
        name: Assemble DEMO Support
        command: ./gradlew :demo:assembleSupportDebug

  analize:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "demo/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "demo/build.gradle" }}-{{ checksum  "library/build.gradle" }}

      - run:
          name: Run Lint report on library
          command: ./gradlew :library:lintSupportDebug
      - store_artifacts:
          name: Save Lint report on library
          path: library/build/reports
          destination: library/reports

      - run:
          name: Run Lint report on demo
          command: ./gradlew :demo:lintSupportDebug
      - store_artifacts:
          name: Save Lint report on demo
          path: demo/build/reports
          destination: demo/reports

      - run: 
          name: Run Sonar report and upload to SonarCloud
          command: ./gradlew sonarqube -Dsonar.branch.name=${CIRCLE_BRANCH}
      
      - run: echo "Analized branch" ${CIRCLE_BRANCH}

  release:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "demo/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "demo/build.gradle" }}-{{ checksum  "library/build.gradle" }}

      - run: echo "Release job called"
      #- run: ./gradlew -Prelease.useLastTag=true final


workflows:
  version: 2
  my-workflow:
    jobs:
    - build:        # Fired by commit on any branch (default) plus any tag
        filters:
          tags:
            only: /.*/

    - analize:      # Fired by commit on any branch (default) plus any tag
        requires:
        - build
        filters:
          tags:
            only: /.*/

    - release:      # Fired by tags only
        requires:
          - analize
        filters:
          tags:
            only: /^v.*/
          branches:
            ignore: /.*/