buildscript {

    repositories {
        google()
        jcenter()
    }

    apply from: './gradle/constants.gradle'

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'

        /*
         *  Iadt PLUGIN: import using legacy plugin application, with dynamic version.
         */
        classpath "es.rafaco.inappdevtools:inappdevtools-plugin:${LIBRARY_VERSION}"

        // Internal Iadt plugins for build and publication
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'wang.dannyhe.tools:plugin:0.0.7'
    }
}

plugins {
    /*
     *  Iadt PLUGIN: Standard usage using plugins DSL.
     *  NOTE: Replace "X.X.X" for latest version.
     *  TODO: Upgrade to Gradle 5.6, it allow dynamic version
     *
     * id "es.rafaco.inappdevtools" version "X.X.X" apply false
     */
    id "org.sonarqube" version "2.7"
}

allprojects {
    repositories {
        mavenLocal()
        maven { url "https://jitpack.io"}
        google()
        jcenter()
    }
}

// Clean all modules
task clean(type: Delete) {
    delete rootProject.buildDir
}
subprojects {
    rootProject.clean.dependsOn tasks.matching { it.name == 'clean' }
}


apply from: './gradle/doze_utils.gradle'

sonarqube {
    androidVariant 'supportDebug'
    properties {
        property "sonar.projectKey", "rafaco_InAppDevTools"
        property "sonar.organization", "rafaco-github"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", System.getenv('SONAR_TOKEN')
    }
}

//Enable Gradle report using param --scan
if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

//TODO: Re-enable JavaDoc generation after common-logging removed.
subprojects {
    tasks.withType(Javadoc).all { enabled = false }
}
