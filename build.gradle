
buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
    }
}

plugins {
    // Declare our plugin (make it available at subprojects)
    id "es.rafaco.inappdevtools" version "0.0.10" apply false
    id "org.sonarqube" version "2.7"
}

ext {
    libraryVersionName = '0.0.43'
    libraryVersionCode = 1
    libraryMinSdkVersion = 16
    libraryTargetSdkVersion = 27
    libraryCompileSdkVersion = 27
    libraryBuildToolsVersion = '27.0.3'
    librarySupportVersion = '27.1.1'

    appVersionName = '0.0.01'
    appVersionCode = 45
    appMinSdkVersion = 16

    /*
    // API 23 -> gradleToolVersion = '2.1.0'
    appTargetSdkVersion = 23
    appCompileSdkVersion = 23
    appBuildToolsVersion = '23.0.2'
    appSupportVersion = '23.0.2'
    */

    // API 26 -> gradleToolVersion = '3.0.0'
    appTargetSdkVersion = 26
    appCompileSdkVersion = 26
    appBuildToolsVersion = '26.0.2'
    appSupportVersion = '26.0.2'


    /*
    // API 27 -> gradleToolVersion = '3.1.0'
    appCompileSdkVersion = 27
    appBuildToolsVersion = '27.0.3'
    appSupportVersion = '27.1.1'
    */

    /*
    // API 28 -> gradleToolVersion = '3.3.0'
    appCompileSdkVersion = 28
    appBuildToolsVersion = '28.0.3'
    appSupportVersion = '28.0.0'
    */
}


sonarqube {
    properties {
        property "sonar.projectKey", "rafaco_InAppDevTools"
        property "sonar.organization", "rafaco-github"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", System.getenv('SONAR_TOKEN')
    }
}

allprojects {
    repositories {
        maven { url "https://jitpack.io"}
        google()
        jcenter()
    }
}


// Clean All task
task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    rootProject.clean.dependsOn tasks.matching { it.name == 'clean' }
}


//Enable Gradle report using param --scan
if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}


//TODO: Re-enable JavaDoc generation after common-logging removed.
subprojects {
    tasks.withType(Javadoc).all { enabled = false }
}